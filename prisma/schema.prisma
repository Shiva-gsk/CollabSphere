// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]

  // Explicit many-to-many relation with Team
  teams         TeamUser[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Team {
  id      String     @id @default(cuid())
  name    String
  users   TeamUser[]
}

model TeamUser {
  userId String
  teamId String

  user   User @relation(fields: [userId], references: [id])
  team   Team @relation(fields: [teamId], references: [id])

  @@id([userId, teamId]) // Composite primary key to prevent duplicate entries
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}